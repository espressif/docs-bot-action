---
name: Generate suggestion from the knowledge base of the documentation bot
description: >
  The action uses the Espressif Chatbot and its knowledge base for automatically answering Github issues.

inputs:
  in_msg:
    description: Issue message which will be handed over to the bot for evaluation.
    required: true
  title:
    description: Issue title.
    required: false
    default: ''
  bot_behavior_setup:
    required: false
    description: Sets the behavior of the bot who should know where it is being deployed.
    default: >
      You are an Engineer tasked to solve Github issues. You are professional, knowledgeable, helpful and always
      friendly. You try to understand the given issue (bug report, feature request) and provide several ideas which
      the customer can try until an Espressif Engineer handles the issue.
  bot_query_prefix:
    description: Instructions to the bot how to respond to issues.
    required: false
    default: >
      Write a detailed reaction to the Github issue. Please warn the customer if you suggest to try something which
      can do irreversible damage (e.g. writing eFuses, enabling security features). Check if the bug report have
      enough information for reproducing the issue. Feature requests should give detailed justification of the request
      including why existing solutions are insufficient. Ask the customer to provide more information if needed.
      Try to provide links to documentation, troubleshooting guides or other Espressif documents if you used
      knowledge from them. If possible then link related and similar issues. Suggest to open a new Github issue only
      in the case the customer is opened it for the wrong Github repository.
  github_comments:
    description: If set to false, the bot will not post a reply to the issue.
    default: true
    required: false
  github_token:
    description: Access token for the repository when the workflow is run. It will be used by the bot to post a reply.
    required: false
  github_repository:
    description: Repository where the workflow is run.
    required: false
  github_issue_number:
    description: Issue number in the repository from where in_msg is coming from.
    required: false
  prefix_out_msg:
    description: Post this message together with the bot's response. Can be used for warnings, disclaimers and similar.
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Check if action is allowed to be run
      if: ${{ github.repository_owner != 'espressif' }}
      shell: bash
      run: |
        echo "Using this action from outside the organization is not supported"
        exit 1

    - name: Checkout action repository
      uses: actions/checkout@v4
      with:
        repository: espressif/docs-bot-action

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: pip

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run bot_action.py
      shell: bash
      id: bot-action
      run: |
        source venv/bin/activate
        cat << 'EOF' > input.txt
        The issue posted in the Github repository: ${{ inputs.github_repository }}
        Github issue title: ${{ inputs.title }}
        Github issue text: ${{ inputs.in_msg }}
        EOF
        cat << 'EOF' > bot_instructions.txt
        ${{ inputs.bot_query_prefix }}
        EOF
        cat << 'EOF' > bot_behavior.txt
        ${{ inputs.bot_behavior_setup }}
        EOF
        printf "%s\n" "${{ inputs.prefix_out_msg }}" > output.txt
        printf "\n---\n" >> output.txt
        python bot_action/bot_action.py --behavior bot_behavior.txt --instructions bot_instructions.txt input.txt >> output.txt || exit 1

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: text-files
        retention-days: 5
        path: |
          output.txt
          input.txt
          bot_instructions.txt
          bot_behavior.txt

    - name: Comment
      if: ${{ inputs.github_comments == 'true' }}
      shell: bash
      run: |
        # --edit-last will fail if there is no previous comment by the bot. See https://github.com/cli/cli/issues/10370
        gh issue comment ${{ inputs.github_issue_number }} --body-file output.txt --edit-last || \
        gh issue comment ${{ inputs.github_issue_number }} --body-file output.txt
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        GH_REPO: ${{ inputs.github_repository }}
