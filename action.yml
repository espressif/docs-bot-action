---
name: Generate suggestion from the knowledge base of the documentation bot
description: >
  The action uses the Espressif Chatbot and its knowledge base for automatically answering Github issues.

inputs:
  in_msg:
    description: Issue message which will be handed over to the bot for evaluation.
    required: true
  title:
    description: Issue title.
    required: true
  bot_query_prefix:
    description: The issue message can be prefixed with this string before evaluation.
    required: false
    default: >
      The customer opened a Github issue with the following information. Please help and I'll post your answer there.
  github_token:
    description: Access token for the repository when the workflow is run. It will be used by the bot to post a reply.
    required: true
  github_repository:
    description: Repository where the workflow is run.
    required: true
  github_issue_number:
    description: Issue number in the repository from where in_msg is coming from.
    required: true
  prefix_out_msg:
    description: Post this message together with the bot's response. Can be used for warnings, disclaimers and similar.
    required: true

runs:
  using: composite
  steps:
    - name: Check if action is allowed to be run
      if: ${{ github.repository_owner != 'espressif' }}
      shell: bash
      run: |
        echo "Using this action from outside the organization is not supported"
        exit 1

    - name: Checkout action repository
      uses: actions/checkout@v4
      with:
        repository: espressif/docs-bot-action

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: pip

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run bot_action.py
      shell: bash
      id: bot-action
      run: |
        source venv/bin/activate
        printf "%s\n" "${{ inputs.bot_query_prefix }}" > input.txt
        printf "%s\n" "${{ inputs.title }}" >> input.txt
        printf "%s\n" "${{ inputs.in_msg }}" >> input.txt
        printf "%s\n" "${{ inputs.prefix_out_msg }}" > output.txt
        printf "\n---\n" >> output.txt
        python bot_action/bot_action.py input.txt >> output.txt || exit 1

    - name: Comment
      shell: bash
      run: |
        # --edit-last will fail if there is no previous comment by the bot. See https://github.com/cli/cli/issues/10370
        gh issue comment ${{ inputs.github_issue_number }} --body-file output.txt --edit-last || \
        gh issue comment ${{ inputs.github_issue_number }} --body-file output.txt
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        GH_REPO: ${{ inputs.github_repository }}
